{"version":3,"sources":["TextFileDisplay.tsx","Home.tsx","hanzi.ts","VerifyPoem.tsx","hanzi-table.ts","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","TextFileDisplay","_ref","pathname","filename","_useState","useState","_useState2","_slicedToArray","fileContent","setFileContent","useEffect","_ref2","_asyncToGenerator","_callee","response","text","_context","fetch","concat","t0","console","apply","arguments","fetchFile","React","createElement","className","Home","Hanzi","kanji","_this","_classCallCheck","sisheng","category","pingzhe","includes","_createClass","punctuations_en","punctuations_zh","punctuations","VerifyPoem","hanzi_table","setText","_useState3","_useState4","_useState5","_useState6","output","setOutput","textareaRef","useRef","savedText","localStorage","getItem","process_text","text_result","map","line","split","char","table","renderOneLine","hanzi_array","row_index","style","display","hanzi","col_index","margin","id","onMouseOver","event","topDiv","document","getElementById","currentTarget","border","span","querySelector","color","handleCharMouseOver","onMouseOut","handleCharMouseOut","backgroundColor","padding","data-tip","position","_handleSubmit","arr","ref","onChange","currentText","target","setItem","rows","onMouseUp","current","select","Button","variant","onClick","HanziTable","load","replace","filter","trim","_i","_char_list","Array","from","getOrCreate","add","decide_sisheng","initialValue","_load","parse","Menu","NavLink","to","App","process","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","log"],"mappings":"kQACAA,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAMA,IAwBe6I,EAxByC,SAAHC,GAA+B,IAAzBC,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAAQC,EACrCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAelC,OAbAI,oBAAU,YACO,eAAAC,EAAAC,YAAA1J,IAAA+G,KAAG,SAAA4C,IAAA,IAAAC,EAAAC,EAAA,OAAA7J,IAAAyB,KAAA,SAAAqI,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAxE,MAAA,cAAAwE,EAAAlC,KAAA,EAAAkC,EAAAxE,KAAA,EAESyE,MAAK,GAAAC,OAAIhB,EAAQ,UAAAgB,OAASf,IAAW,OAA9C,OAARW,EAAQE,EAAAnF,KAAAmF,EAAAxE,KAAA,EACKsE,EAASC,OAAM,OAA5BA,EAAIC,EAAAnF,KACV4E,EAAeM,GAAMC,EAAAxE,KAAA,iBAAAwE,EAAAlC,KAAA,GAAAkC,EAAAG,GAAAH,EAAA,SAErBI,QAAQ9F,MAAM,uBAAsB0F,EAAAG,IAAS,yBAAAH,EAAA/B,SAAA4B,EAAA,kBAEhD,kBARc,OAAAF,EAAAU,MAAArH,KAAAsH,YAAA,EASfC,IACC,CAACpB,IAIFqB,IAAAC,cAAA,OAAKC,UAAU,IACbF,IAAAC,cAAA,OAAKC,UAAU,yBAAyBlB,KChB/BmB,EARF,WACT,OACIH,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAG,kDCLTG,EAAK,WACT,SAAAA,EAAYC,GAAe,IAAAC,EAAA9H,KAAA+H,YAAA/H,KAAA4H,GAAA5H,KAGpB6H,WAAK,EAAA7H,KACLgI,QAAkB,EAAChI,KACnBiI,SAA0B,GAAEjI,KAOnCkI,QAAU,WAGR,GAFwB,CAAC,IAAK,IAAK,IAAK,KAEpBC,SAASL,EAAKD,OAChC,MAAO,GAET,GAJwB,CAAC,SAAK,SAAK,SAAK,UAIpBM,SAASL,EAAKD,OAChC,MAAO,GAET,IAAMG,EAAUF,EAAKE,QACrB,OAAuB,IAAR,EAAVA,IAAyBA,EAAQ,EAAI,EACjC,SAEM,GAAXA,EACK,SAEF,UA3BLhI,KAAK6H,MAAQA,EAShB,OARAO,YAAAR,EAAA,EAAAjK,IAAA,MAAAE,MAAA,SAKGmK,EAAiBC,GACjBjI,KAAKgI,SAAWA,EAChBhI,KAAKiI,SAAS/E,KAAK+E,OACtBL,EAXQ,gBCCX1K,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAWA,IAAMkL,EAAkB,CAAC,IAAK,IAAK,IAAK,KAClCC,EAAkB,CAAC,SAAK,SAAK,SAAK,UAClCC,EAAeF,EAAgBnB,OAAOoB,GAgC5C,IA4KeE,EApK+B,SAAHvC,GAAwB,IAAlBwC,EAAWxC,EAAXwC,YAAWrC,EAClCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BW,EAAIT,EAAA,GAAEoC,EAAOpC,EAAA,GAAAqC,EACUtC,mBAAS,IAAGuC,EAAArC,YAAAoC,EAAA,GAAhBE,GAAZD,EAAA,GAAYA,EAAA,GACEvC,mBAAoB,KAAGyC,EAAAvC,YAAAsC,EAAA,GAA5CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAcC,iBAA4B,MAEhDxC,oBAAU,WACR,IAAMyC,EAAYC,aAAaC,QAAQ,aACnCF,GACFT,EAAQS,IAET,IAEH,IAUMG,EAAe,SAACvC,EAAgB0B,GACpC,IAAIc,EACJA,EAAcxC,EAAKyC,IAAI,SAACC,GAOtB,OAN6BA,EAAKC,MAAM,IAAIF,IAAI,SAACG,GAC/C,OAAIpB,EAAaJ,SAASwB,GACjB,IAAI/B,EAAM+B,GAEZlB,EAAYmB,MAAMD,OAI7BX,EAAUO,IAgCNM,EAAgB,SAACC,EAAsBC,GAC3C,OACEvC,IAAAC,cAAA,OAAK9J,IAAG,YAAAuJ,OAAc6C,GAAaC,MAAO,CAAEC,QAAS,SAClDH,EAAYN,IAAI,SAACU,EAAOC,GAAS,OAChC3C,IAAAC,cAAA,OACE9J,IAAG,aAAAuJ,OAAe6C,EAAS,KAAA7C,OAAIiD,GAC/BH,MAAO,CAAEI,OAAQ,QAEjB5C,IAAAC,cAAA,OACE4C,GAAE,WAAAnD,OAAa6C,EAAS,KAAA7C,OAAIiD,GAC5BxM,IAAG,YAAAuJ,OAAc6C,EAAS,KAAA7C,OAAIiD,GAC9BzC,UAAU,UACV4C,YAAa,SAACC,GAAK,OAxCH,SAACL,EAAcK,GACzC,IAAMC,EAASC,SAASC,eAAeH,EAAMI,cAAcN,IAC3D,GAAIG,EAAQ,CACVA,EAAOR,MAAMY,OAAS,kBACtB,IAAMC,EAAOL,EAAOM,cAAc,QAC9BD,IACFA,EAAKb,MAAMe,MAAQ,QAkCWC,CAAoBd,EAAOK,IACnDU,WAAY,SAACV,GAAK,OA9BH,SAACL,EAAcK,GACxC,IAAMC,EAASC,SAASC,eAAeH,EAAMI,cAAcN,IAC3D,GAAIG,EAAQ,CACVA,EAAOR,MAAMY,OAAS,wBACtB,IAAMC,EAAOL,EAAOM,cAAc,QAC9BD,IACFA,EAAKb,MAAMe,MAAQ,SAwBUG,CAAmBhB,EAAOK,IACjDP,MAAO,CACLmB,gBAAiB,GACjBC,QAAS,MACTR,OAAQ,yBAEVS,WAAUnB,EAAMrC,OAEhBL,IAAAC,cAAA,QACEuC,MAAO,CACLI,OAAQ,MACRW,MAAO,OACPO,SAAU,WACVrB,QAAS,eACTmB,QAAS,QAIVlB,EAAMrC,QAGXL,IAAAC,cAAA,OAAKC,UAAU,aACb2C,GAAE,SAAAnD,OAAW6C,EAAS,KAAA7C,OAAIiD,GAC1BxM,IAAG,UAAAuJ,OAAY6C,EAAS,KAAA7C,OAAIiD,IAE5B3C,IAAAC,cAAA,QACEuC,MAAO,CACLI,OAAQ,MACRW,MAAO,OACPd,QAAS,iBAGVC,EAAMhC,iBASM,SAAAqD,IAI1B,OAJ0BA,EAAA3E,YAAA1J,IAAA+G,KAA3B,SAAA4C,IAAA,IAAA2E,EAAA,OAAAtO,IAAAyB,KAAA,SAAAqI,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAxE,MAAA,OACQgJ,EAAMzE,EAAK2C,MAAM,MAEvBJ,EAAakC,EAAK/C,GAAa,wBAAAzB,EAAA/B,SAAA4B,OAChCQ,MAAArH,KAAAsH,WAED,OACEE,IAAAC,cAAA,WACED,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,UAAS,wBAGxBF,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,YAAUC,UAAU,oBAClB2C,GAAG,8BACHoB,IAAKxC,EACLpL,MAAOkJ,EACP2E,SAhIc,SAACnB,GACzB,IAAMoB,EAAcpB,EAAMqB,OAAO/N,MACjC6K,EAAQiD,GACRvC,aAAayC,QAAQ,YAAaF,IA8HxBG,KAAM,EACNC,UA7HoB,WAC1B9C,EAAY+C,SACd/C,EAAY+C,QAAQC,YA8HdzE,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAACyE,IAAM,CAACC,QAAQ,UAAUC,QA9BpC,WAEyB,OAAAb,EAAAlE,MAAArH,KAAAsH,aA4BkC,6BAElDE,IAAAC,cAAA,WACDD,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,WA3FHsB,EAAOS,IAAI,SAACM,EAAaC,GAC9B,OAAOF,EAAcC,EAAaC,QA6F9BvC,IAAAC,cAAA,OAAKC,UAAU,UAAS,wDChNlCxK,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAD+B,IAEzBkP,EAAU,WAMZ,SAAAA,EAAYnG,GAAkB6B,YAAA/H,KAAAqM,GAAArM,KALvB+G,KAAe,GAAE/G,KACjB4J,MAA+B,GAAE5J,KAEhCkG,cAAQ,EAGZlG,KAAKkG,SAAWA,EAChBlG,KAAKsM,OA0CwC,OAzChDlE,YAAAiE,EAAA,EAAA1O,IAAA,QAAAE,MAAA,SAEKkJ,GAIJ,IAHA,IAAM6C,EAA+B,GAE/B4B,EADazE,EAAKwF,QAAQ,kCAAyB,IAClC7C,MAAM,SAAS8C,OAAO,SAAA/C,GAAI,MAAoB,KAAhBA,EAAKgD,SACjD/I,EAAI,EAAGA,EAAI8H,EAAI/H,OAAQC,GAAK,EAGnC,IAFA,IAAMuE,EAAWuD,EAAI9H,GAErBgJ,EAAA,EAAAC,EADkCC,MAAMC,KAAKrB,EAAI9H,EAAI,IAC3BgJ,EAAAC,EAAAlJ,OAAAiJ,IAAE,CAAvB,IAAI/C,EAAIgD,EAAAD,GACG1M,KAAK8M,YAAYlD,EAAOD,EAAM/B,GACtCmF,IAAI/M,KAAKgN,eAAe/E,GAAWA,GAG7C,OAAO2B,IACR,CAAAjM,IAAA,cAAAE,MAAA,SAEYoD,EAAatD,EAAasP,GAErC,OADAhM,EAAOtD,GAAOsD,EAAOtD,IAAQ,IAAIsP,EAAatP,GACvCsD,EAAOtD,KACf,CAAAA,IAAA,iBAAAE,MAAA,SAEcoK,GACb,OAAIA,EAASE,SAAS,iBAASF,EAASE,SAAS,gBACxC,EACEF,EAASE,SAAS,UACpB,EACEF,EAASE,SAAS,UACpB,EAEA,IAEV,CAAAxK,IAAA,OAAAE,MAAA,eAAAqP,EAAAtG,YAAA1J,IAAA+G,KAAA,SAAA4C,IAAA,IAAAC,EAAAC,EAAA,OAAA7J,IAAAyB,KAAA,SAAAqI,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAxE,MAAA,cAAAwE,EAAAlC,KAAA,EAAAkC,EAAAxE,KAAA,EAI0ByE,MAAK,GAAAC,OAAIlH,KAAKkG,SAAQ,yBAAuB,OAAtD,OAARY,EAAQE,EAAAnF,KAAAmF,EAAAxE,KAAA,EACKsE,EAASC,OAAM,OAA5BA,EAAIC,EAAAnF,KACV7B,KAAK+G,KAAOA,EACZ/G,KAAK4J,MAAQ5J,KAAKmN,MAAMpG,GAAMC,EAAAxE,KAAA,iBAAAwE,EAAAlC,KAAA,GAAAkC,EAAAG,GAAAH,EAAA,SAE9BI,QAAQ9F,MAAM,uBAAsB0F,EAAAG,IAAS,yBAAAH,EAAA/B,SAAA4B,EAAA7G,KAAA,sCAAAkN,EAAA7F,MAAArH,KAAAsH,YAThD,MASgD+E,EAlDrC,GCOVe,EAAO,WACX,OACE5F,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,IAACD,IAAAC,cAAC4F,IAAO,CAACC,GAAG,KAAI,QAAc,KACnC9F,IAAAC,cAAA,UAAI,IAACD,IAAAC,cAAC4F,IAAO,CAACC,GAAG,WAAU,gBAAY,KACvC9F,IAAAC,cAAA,UAAI,IAACD,IAAAC,cAAC4F,IAAO,CAACC,GAAG,eAAc,gBAAY,KAC3C9F,IAAAC,cAAA,UAAI,IAACD,IAAAC,cAAC4F,IAAO,CAACC,GAAG,eAAc,4BAAc,OAwBpCC,MAnBf,WACE,IACI9E,EAAc,IAAI4D,EAD4BmB,gBAGlD,OACEhG,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACgG,IAAM,KACLjG,IAAAC,cAAC2F,EAAI,MACL5F,IAAAC,cAACiG,IAAM,KACLlG,IAAAC,cAACkG,IAAK,CAACC,KAAK,IAAIC,QAASrG,IAAAC,cAACE,EAAI,QAC9BH,IAAAC,cAACkG,IAAK,CAACC,KAAK,UAAUC,QAASrG,IAAAC,cAACe,EAAU,CAACC,YAAaA,MACxDjB,IAAAC,cAACkG,IAAK,CAACC,KAAK,cAAcC,QAASrG,IAAAC,cAACzB,EAAe,CAACG,SAAS,iBAAiBD,SAVpCsH,mBAW1ChG,IAAAC,cAACkG,IAAK,CAACC,KAAK,cAAcC,QAASrG,IAAAC,cAACzB,EAAe,CAACG,SAAS,iBAAiBD,SAXpCsH,uBCTrCM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAA9M,KAAA6M,EAAAE,KAAA,UAAqB/M,KAAK,SAAA6E,GAAiD,IAA9CmI,EAAMnI,EAANmI,OAAQC,EAAMpI,EAANoI,OAAQC,EAAMrI,EAANqI,OAAQC,EAAMtI,EAANsI,OAAQC,EAAOvI,EAAPuI,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCCDU,IAASC,WAAWjE,SAASC,eAAe,SACpDiE,OACHnH,IAAAC,cAACD,IAAMoH,WAAU,KACfpH,IAAAC,cAAC8F,EAAG,QAORO,EAAgB1G,QAAQyH","file":"static/js/main.15996693.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ntype TextFileDisplayProps = {\n  pathname: string;\n  filename: string;\n};\n\nconst TextFileDisplay: React.FC<TextFileDisplayProps> = ({ pathname, filename }) => {\n  const [fileContent, setFileContent] = useState('');\n\n  useEffect(() => {\n    const fetchFile = async () => {\n      try {\n        const response = await fetch(`${pathname}/data/${filename}`);\n        const text = await response.text();\n        setFileContent(text);\n      } catch (error) {\n        console.error('Error fetching file:', error);\n      }\n    };\n    fetchFile();\n  }, [filename]);\n\n  return (\n    \n    <div className=\"\">\n      <pre className=\"pre-wrap left-aligned\">{fileContent}</pre>\n    </div>\n  );\n};\n\nexport default TextFileDisplay;\n\n","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <p>This is the home page!</p>\n        </div>\n    );\n}\n\nexport default Home;","class Hanzi {\n  constructor(kanji: string) {\n      this.kanji = kanji;\n  }\n  public kanji: string;\n  public sisheng: number = 0;\n  public category: Array<string> = [];\n\n  add(sisheng: number, category: string) {\n      this.sisheng |= sisheng; // 按位或\n      this.category.push(category);\n  }\n\n  pingzhe = (): string => {\n    const punctuations_en = [\",\", \".\", \"!\", \"?\"]\n    const punctuations_zh = [\"，\", \"。\", \"？\", \"！\"]\n    if (punctuations_en.includes(this.kanji)) {\n      return \"\";\n    }\n    if (punctuations_zh.includes(this.kanji)) {\n      return \"\";\n    }\n    const sisheng = this.sisheng\n    if ((sisheng & 0b1) == 0b1 && sisheng-1 > 0) {\n      return '辨';\n    }\n    if (sisheng == 1) {\n      return '平';\n    }\n    return '仄';\n  }\n}\n\nexport { Hanzi };","import { Button, Card } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { HanziTable } from './hanzi-table';\nimport { Hanzi } from './hanzi'\nimport React, { useState, useEffect, useRef } from 'react';\n\n\ntype VerifyPoemProps = {\n  hanzi_table: HanziTable;\n};\n\n\nconst punctuations_en = [\",\", \".\", \"!\", \"?\"]\nconst punctuations_zh = [\"，\", \"。\", \"？\", \"！\"]\nconst punctuations = punctuations_en.concat(punctuations_zh);\n\n\nconst pingzhe = (hanzi_table: HanziTable, char: string): string => {\n  if (punctuations_en.includes(char)) {\n    return \" \";\n  }\n  if (punctuations_zh.includes(char)) {\n    return \"  \"; // 全角空格\n  }\n  const hanzi = hanzi_table.table[char];\n  if (hanzi == undefined) {\n    return '？';\n  }\n  const sisheng = hanzi.sisheng\n  if ((sisheng & 0b1) == 0b1 && sisheng-1 > 0) {\n    return '辨';\n  }\n  if (sisheng == 1) {\n    return '平';\n  }\n  return '仄';\n}\n\nfunction dropRightPunctuations(str: string): string {\n  let lastIndex = str.length - 1;\n  while (lastIndex >= 0 && punctuations.includes(str[lastIndex])) {\n    lastIndex--;\n  }\n  return str.slice(0, lastIndex + 1);\n}\n\nconst rhyme = (hanzi_table: HanziTable, line: string): string => {\n  const line_trimed = dropRightPunctuations(line)\n  const last = line_trimed[line_trimed.length - 1]\n  const hanzi = hanzi_table.table[last];\n  return \"[\" + hanzi.category.join(\",\") + \"]\"\n}\n\n// component\nconst VerifyPoem: React.FC<VerifyPoemProps> = ({ hanzi_table }) => {\n  const [text, setText] = useState('');\n  const [preText, setPreText] = useState('');\n  const [output, setOutput] = useState<Hanzi[][]>([]);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    const savedText = localStorage.getItem(\"savedText\");\n    if (savedText) {\n      setText(savedText);\n    }\n  }, []);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const currentText = event.target.value;\n    setText(currentText);\n    localStorage.setItem(\"savedText\", currentText);\n  };\n  const handleTextareaMouseDown = () => {\n    if (textareaRef.current) {\n      textareaRef.current.select();\n    }\n  };\n  const process_text = (text: string[], hanzi_table: HanziTable) => {\n    let text_result: Hanzi[][] = [];\n    text_result = text.map((line: string) =>  {\n      const line_result: Hanzi[] = line.split(\"\").map((char) => {\n        if (punctuations.includes(char)) {\n          return new Hanzi(char);\n        }\n        return hanzi_table.table[char];\n      });\n      return line_result;\n    });\n    setOutput(text_result);\n  };\n\n  \n  const handleCharMouseOver = (hanzi: Hanzi, event: React.MouseEvent) => {\n    const topDiv = document.getElementById(event.currentTarget.id);\n    if (topDiv) {\n      topDiv.style.border = '2px solid green';\n      const span = topDiv.querySelector('span');\n      if (span) {\n        span.style.color = 'red';\n      }\n    }\n  };\n\n  const handleCharMouseOut = (hanzi: Hanzi, event: React.MouseEvent) => {\n    const topDiv = document.getElementById(event.currentTarget.id);\n    if (topDiv) {\n      topDiv.style.border = '2px solid transparent';\n      const span = topDiv.querySelector('span');\n      if (span) {\n        span.style.color = 'gray';\n      }\n    }\n  };\n\n  const renderOutput = () => {\n    return output.map((hanzi_array, row_index) => {\n      return renderOneLine(hanzi_array, row_index)\n    })\n  }\n\n  const renderOneLine = (hanzi_array: Hanzi[], row_index: number) => {\n    return (\n      <div key={`line-key-${row_index}`} style={{ display: 'flex' }}>\n        {hanzi_array.map((hanzi, col_index) => (\n          <div\n            key={`hanzi-key-${row_index}-${col_index}`}\n            style={{ margin: '0px' }}\n          >\n            <div\n              id={`char-id-${row_index}-${col_index}`}\n              key={`char-key-${row_index}-${col_index}`}\n              className=\"top-div\"\n              onMouseOver={(event) => handleCharMouseOver(hanzi, event)}\n              onMouseOut={(event) => handleCharMouseOut(hanzi, event)}\n              style={{\n                backgroundColor: '',\n                padding: '0px',\n                border: '2px solid transparent',\n              }}\n              data-tip={hanzi.kanji}\n              >\n              <span\n                style={{\n                  margin: '0px',\n                  color: 'gray',\n                  position: 'relative',\n                  display: 'inline-block',\n                  padding: '0px',\n                  // border: '2px solid transparent',\n                }}\n              >\n                {hanzi.kanji}\n              </span>\n            </div>\n            <div className=\"bottom-div\"\n              id={`pz-id-${row_index}-${col_index}`}\n              key={`pz-key-${row_index}-${col_index}`}\n            >\n              <span\n                style={{\n                  margin: '0px',\n                  color: 'blue',\n                  display: 'inline-block',\n                }}\n              >\n                {hanzi.pingzhe()}\n              </span>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  \n  async function handleSubmit() {\n    const arr = text.split(/\\n/);\n    const line_list: Array<string> = []\n    process_text(arr, hanzi_table);\n  }\n\n  return (\n    <div>\n      <hr></hr>\n      <br></br>\n      <br></br>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            One of three columns\n          </div>\n          <div className=\"col-sm\">\n            <textarea className=\"form-control fs-3\"\n              id=\"exampleFormControlTextarea1\"\n              ref={textareaRef}\n              value={text} \n              onChange={handleInputChange}\n              rows={4}\n              onMouseUp={handleTextareaMouseDown}\n            >\n            </textarea>\n            <br></br>\n            <div className=\"text-start\">\n              <Button variant=\"primary\" onClick={handleSubmit}>查验平仄</Button>\n            </div>\n             <br></br>\n            <div className=\"col-sm fs-3 text-start\">\n              <div>{renderOutput()}</div>\n            </div> \n          </div>\n          <div className=\"col-sm\">\n            One of three columns\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VerifyPoem;\n","import { Hanzi } from './hanzi'\n\nclass HanziTable {\n    public text: string = \"\";\n    public table: Record<string, Hanzi> = {};\n\n    private pathname: string;\n\n    constructor(pathname: string) {\n        this.pathname = pathname;\n        this.load();\n    }\n\n    parse(text: string) {\n      const table: Record<string, Hanzi> = {};\n      const clean_text = text.replace(/\\[[^\\[\\]]*\\]|,|。|、|,/g, \"\");\n      const arr = clean_text.split(/\\r?\\n/).filter(line => line.trim() !== \"\");\n      for (let i = 0; i < arr.length; i += 2) {\n        const category = arr[i];\n        const char_list: Array<string> =  Array.from(arr[i + 1]);\n        for (var char of char_list) {\n          const hanzi = this.getOrCreate(table, char, Hanzi);\n          hanzi.add(this.decide_sisheng(category), category);\n        }\n      }\n      return table;\n    }\n\n    getOrCreate (record: any, key: string, initialValue: any) {\n      record[key] = record[key] || new initialValue(key);\n      return record[key];\n    }\n\n    decide_sisheng(category: string): number {\n      if (category.includes(\"上平\") || category.includes(\"下平\")) {\n        return 0b0001;\n      } else if (category.includes(\"上\")) {\n        return 0b0010;\n      } else if (category.includes(\"去\")) {\n        return 0b0100;\n      } else { // 入\n        return 0b1000;\n      }\n    }\n\n    async load() {\n      try {\n        const response = await fetch(`${this.pathname}/data/characters.txt`);\n        const text = await response.text();\n        this.text = text;\n        this.table = this.parse(text);\n      } catch (error) {\n        console.error('Error fetching file:', error);\n      }\n    }\n};\nexport { HanziTable };","import './App.css';\nimport React from 'react';\nimport TextFileDisplay from './TextFileDisplay';\nimport Home from './Home';\nimport VerifyPoem from './VerifyPoem';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { HanziTable } from './hanzi-table';\n\nconst Menu = () => {\n  return (\n    <ul>\n      <li> <NavLink to=\"/\">Home</NavLink> </li>\n      <li> <NavLink to=\"/verify\">查询</NavLink> </li>  \n      <li> <NavLink to=\"/categories\">四声</NavLink> </li>  \n      <li> <NavLink to=\"/characters\">平水韵表</NavLink> </li>\n    </ul>\n  );  \n}\n\nfunction App() {\n  const pathname = process.env.REACT_APP_PATHNAME ? process.env.REACT_APP_PATHNAME : '';\n  let hanzi_table = new HanziTable(pathname);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu />\n        <Routes>\n          <Route path=\"*\" element={<Home />} />\n          <Route path=\"/verify\" element={<VerifyPoem hanzi_table={hanzi_table}/>} />\n          <Route path=\"/categories\" element={<TextFileDisplay filename=\"categories.txt\" pathname={pathname} />} />\n          <Route path=\"/characters\" element={<TextFileDisplay filename=\"characters.txt\" pathname={pathname} />} />\n        </Routes> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry: (entry: any) => void) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}